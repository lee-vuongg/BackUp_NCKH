@model TCN_NCKH.Areas.Admin.Controllers.DapansController.QuestionListViewModel 
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Quản Lý Đáp Án"; // Tiêu đề trang rõ ràng
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml"; // Đảm bảo đúng layout của Admin
}

<div class="container-fluid">
    <h1 class="mt-4">
        <i class="fas fa-list-alt"></i> @ViewData["Title"]
    </h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin/AdminHome">Dashboard</a></li>
        <li class="breadcrumb-item active">@ViewData["Title"]</li>
    </ol>

    <!-- Khu vực hiển thị thông báo (Success/Error) -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách câu hỏi và đáp án</h6> @* Đổi tiêu đề *@
            <a asp-action="Create" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> Tạo Đáp Án Mới @* Vẫn giữ nút tạo đáp án, có thể cân nhắc đổi thành "Tạo Câu hỏi mới" và từ đó thêm đáp án *@
            </a>
        </div>
        <div class="card-body">
            <!-- Form lọc -->
            <form asp-action="Index" method="get" class="mb-4">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="selectedDeThiId" class="control-label">Đề thi:</label>
                            <select name="selectedDeThiId" id="selectedDeThiId" class="form-control"
                                    asp-items="@(ViewData["DeThiId"] as SelectList)">
                                <option value="">-- Chọn Đề thi --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="selectedBoCauHoiId" class="control-label">Bộ câu hỏi:</label>
                            <select name="selectedBoCauHoiId" id="selectedBoCauHoiId" class="form-control"
                                    asp-items="@(ViewData["BoCauHoiId"] as SelectList)">
                                <option value="">-- Chọn Bộ câu hỏi --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="selectedCauHoiId" class="control-label">Câu hỏi:</label>
                            <select name="selectedCauHoiId" id="selectedCauHoiId" class="form-control"
                                    asp-items="@(ViewData["CauHoiId"] as SelectList)">
                                <option value="">-- Chọn Câu hỏi --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-12 d-flex justify-content-end">
                        <button type="submit" class="btn btn-info mr-2"><i class="fas fa-filter"></i> Lọc</button>
                        <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-redo"></i> Xóa lọc</a>
                    </div>
                </div>
            </form>

            @if (!Model.Questions.Any()) @* Đổi thành Model.Questions *@
            {
                <div class="alert alert-info">Không có câu hỏi nào được tìm thấy.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>ID Câu hỏi</th>
                                <th>Nội dung Câu hỏi</th>
                                <th>Thuộc Bộ câu hỏi</th>
                                <th class="text-center">Được sử dụng trong Đề thi</th>
                                <th class="text-center">Số đáp án</th> @* Cột mới *@
                                <th class="text-center">Hành Động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var questionViewModel in Model.Questions) @* Lặp qua QuestionViewModelForIndex *@
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => questionViewModel.Cauhoi.Id)</td> @* Truy cập qua .Cauhoi *@
                                    <td>@Html.DisplayFor(modelItem => questionViewModel.Cauhoi.Noidung)</td> @* Truy cập qua .Cauhoi *@
                                    <td>
                                        @if (questionViewModel.Cauhoi.Bocauhoi != null) @* Truy cập qua .Cauhoi *@
                                        {
                                            @Html.DisplayFor(modelItem => questionViewModel.Cauhoi.Bocauhoi.Tenbocauhoi) @* Truy cập qua .Cauhoi *@
                                        }
                                        else
                                        {
                                            <span>N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (questionViewModel.RelatedDeThiNames != null && questionViewModel.RelatedDeThiNames.Any())
                                        {
                                            @string.Join(", ", questionViewModel.RelatedDeThiNames)
                                        }
                                        else
                                        {
                                            <span>Không có</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @questionViewModel.Cauhoi.Dapans.Count() @* Hiển thị số lượng đáp án *@
                                    </td>
                                    <td class="text-center">
                                        <button type="button" class="btn btn-primary btn-sm view-answers-btn" data-toggle="modal" data-target="#answersModal" data-cauhoi-id="@questionViewModel.Cauhoi.Id">
                                            <i class="fas fa-eye"></i> Xem Đáp Án
                                        </button>
                                        <a asp-action="Create" asp-route-cauhoiid="@questionViewModel.Cauhoi.Id" class="btn btn-success btn-sm ml-1" title="Thêm Đáp Án">
                                            <i class="fas fa-plus"></i>
                                        </a>
                                        @* Có thể thêm nút Edit/Delete cho Câu hỏi ở đây nếu muốn quản lý câu hỏi từ trang này *@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Phần phân trang -->
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="Index"
                               asp-route-page="@(Model.PageNumber - 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-selectedBoCauHoiId="@Model.SelectedBoCauHoiId"
                               asp-route-selectedCauHoiId="@Model.SelectedCauHoiId"
                               asp-route-selectedDeThiId="@Model.SelectedDeThiId"
                               tabindex="-1" aria-disabled="@(Model.PageNumber == 1)">Trước</a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-route-page="@i"
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-selectedBoCauHoiId="@Model.SelectedBoCauHoiId"
                                   asp-route-selectedCauHoiId="@Model.SelectedCauHoiId"
                                   asp-route-selectedDeThiId="@Model.SelectedDeThiId">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="Index"
                               asp-route-page="@(Model.PageNumber + 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-selectedBoCauHoiId="@Model.SelectedBoCauHoiId"
                               asp-route-selectedCauHoiId="@Model.SelectedCauHoiId"
                               asp-route-selectedDeThiId="@Model.SelectedDeThiId"
                               aria-disabled="@(Model.PageNumber == Model.TotalPages)">Tiếp</a>
                        </li>
                    </ul>
                </nav>
                <div class="text-center text-muted mt-2">
                    Hiển thị @Model.Questions.Count() / @Model.TotalItems câu hỏi. Trang @Model.PageNumber / @Model.TotalPages
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal để hiển thị danh sách đáp án -->
<div class="modal fade" id="answersModal" tabindex="-1" role="dialog" aria-labelledby="answersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div id="answersModalContent">
                <!-- Nội dung đáp án sẽ được tải vào đây bằng AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Tự động đóng thông báo sau vài giây
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 3000); // 3 giây

            // --- Logic AJAX để tải dropdown Câu hỏi dựa trên Bộ câu hỏi ---
            function loadCauHois(boCauHoiId, selectedCauHoiId) {
                var cauHoiDropdown = $('#selectedCauHoiId'); // ID của dropdown Câu hỏi
                cauHoiDropdown.empty(); // Xóa các option cũ
                cauHoiDropdown.append($('<option></option>').val('').text('-- Chọn Câu hỏi --'));

                if (boCauHoiId) {
                    $.ajax({
                        url: '@Url.Action("GetQuestionsByBoCauHoiId", "Dapans", new { area = "Admin" })', // Đường dẫn tới action Ajax
                        type: 'GET',
                        data: { boCauHoiId: boCauHoiId },
                        success: function (data) {
                            $.each(data, function (i, question) {
                                cauHoiDropdown.append($('<option></option>').val(question.value).text(question.text));
                            });
                            if (selectedCauHoiId) {
                                cauHoiDropdown.val(selectedCauHoiId);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Lỗi khi tải câu hỏi:", error);
                        }
                    });
                }
            }

            // Gán sự kiện change cho dropdown Bộ câu hỏi
            $('#selectedBoCauHoiId').change(function () {
                var selectedBoCauHoiId = $(this).val();
                loadCauHois(selectedBoCauHoiId, null); // Không có câu hỏi nào được chọn sẵn khi thay đổi Bộ câu hỏi
                // Khi thay đổi Bộ câu hỏi, reset Đề thi về rỗng để tránh xung đột logic
                $('#selectedDeThiId').val(''); 
            });

            // Gán sự kiện change cho dropdown Đề thi
            $('#selectedDeThiId').change(function () {
                var selectedDeThiId = $(this).val();
                if (selectedDeThiId) {
                    // Nếu chọn Đề thi, reset Bộ câu hỏi và Câu hỏi
                    $('#selectedBoCauHoiId').val('');
                    $('#selectedCauHoiId').empty().append($('<option></option>').val('').text('-- Chọn Câu hỏi --'));
                }
            });

            // Tải câu hỏi lần đầu khi trang load (nếu có Bộ câu hỏi được chọn sẵn từ Model)
            var initialBoCauHoiId = '@(Model.SelectedBoCauHoiId.HasValue ? Model.SelectedBoCauHoiId.Value.ToString() : "")';
            var initialCauHoiId = '@(Model.SelectedCauHoiId.HasValue ? Model.SelectedCauHoiId.Value.ToString() : "")';
            var initialDeThiId = '@(Model.SelectedDeThiId ?? "")'; // Lấy giá trị của SelectedDeThiId

            // Đặt giá trị ban đầu cho dropdown Đề thi
            if (initialDeThiId) {
                $('#selectedDeThiId').val(initialDeThiId);
            }

            // Load câu hỏi dựa trên Bộ câu hỏi ban đầu (chỉ khi không có Đề thi được chọn)
            // Hoặc nếu có Đề thi được chọn, nhưng Bộ câu hỏi của nó đã được Controller set lại
            if (initialBoCauHoiId && !initialDeThiId) { // Chỉ load nếu có BoCauHoiId và không có DeThiId
                loadCauHois(initialBoCauHoiId, initialCauHoiId);
            } else if (initialBoCauHoiId && initialDeThiId) { // Nếu có cả DeThiId và BoCauHoiId (do Controller set lại)
                 loadCauHois(initialBoCauHoiId, initialCauHoiId);
            }
            // --- Kết thúc Logic AJAX ---

            // --- Logic hiển thị đáp án trong Modal ---
            $(document).on('click', '.view-answers-btn', function () {
                var cauhoiId = $(this).data('cauhoi-id');
                $('#answersModalContent').html('<div class="text-center p-4"><i class="fas fa-spinner fa-spin"></i> Đang tải đáp án...</div>'); // Hiển thị loading

                $.ajax({
                    url: '@Url.Action("GetAnswersForQuestion", "Dapans", new { area = "Admin" })',
                    type: 'GET',
                    data: { cauhoiId: cauhoiId },
                    success: function (data) {
                        $('#answersModalContent').html(data); // Đổ nội dung PartialView vào modal
                    },
                    error: function (xhr, status, error) {
                        $('#answersModalContent').html('<div class="alert alert-danger">Không thể tải đáp án. Vui lòng thử lại.</div>');
                        console.error("Lỗi khi tải đáp án:", error);
                    }
                });
            });
            // --- Kết thúc Logic Modal ---
        });
    </script>
    @* Đảm bảo _AdminLayout.cshtml của bạn đã bao gồm jQuery và Bootstrap JS. *@
}
