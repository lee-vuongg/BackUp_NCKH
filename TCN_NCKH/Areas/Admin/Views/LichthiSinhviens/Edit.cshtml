@model TCN_NCKH.Models.DBModel.LichthiSinhvien
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Chỉnh sửa Phân công Lịch thi";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml"; // Đảm bảo sử dụng layout admin
}

@* QUAN TRỌNG: Kiểm tra Model có null không ngay đầu View để tránh NullReferenceException *@
@if (Model == null)
{
    // Đặt thông báo lỗi vào TempData và chuyển hướng
    TempData["ErrorMessage"] = "Không thể tải dữ liệu phân công để chỉnh sửa. Vui lòng thử lại.";
    // Chuyển hướng về trang Index của chính controller này (LichthiSinhviens)
    Context.Response.Redirect(Url.Action("Index", "LichthiSinhviens", new { area = "Admin" }));
    return; // Dừng việc render View này
}

<h1 class="mb-4">Chỉnh sửa Phân công Lịch thi</h1>

@* Hiển thị thông báo từ TempData an toàn hơn *@
@if (TempData["SuccessMessage"] is string successMessage && !string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Html.Raw(successMessage)
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] is string errorMessage && !string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @Html.Raw(errorMessage) @* Sử dụng biến đã kiểm tra null và kiểu *@
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h4>Thông tin Phân công</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        @* Tăng chiều rộng cột form lên một chút *@
        <form asp-action="Edit" method="post">
            @* Thêm method="post" cho rõ ràng *@
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            @* Các trường khóa chính, cần giữ lại dưới dạng hidden input để gửi lên server *@
            <input type="hidden" asp-for="Lichthiid" />
            <input type="hidden" asp-for="Sinhvienid" />

            @* Hiển thị thông tin lịch thi và sinh viên cho người dùng biết họ đang chỉnh sửa cái gì *@
            @* QUAN TRỌNG: Kiểm tra null cho các navigation properties trước khi truy cập *@
            <div class="mb-3">
                <label class="form-label">Lịch thi:</label>
                <p class="form-control-plaintext">
                    <strong>Đề thi:</strong> @(Model.Lichthi?.Dethi?.Tendethi ?? "N/A")<br />
                    <strong>Lớp:</strong> @(Model.Lichthi?.Lophoc?.Tenlop ?? "N/A")<br />
                    <strong>Ngày thi:</strong> @(Model.Lichthi?.Ngaythi.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                </p>
            </div>

            <div class="mb-3">
                <label class="form-label">Sinh viên:</label>
                <p class="form-control-plaintext">
                    <strong>MSV:</strong> @(Model.Sinhvien?.Msv ?? "N/A")<br />
                    <strong>Họ tên:</strong> @(Model.Sinhvien?.SinhvienNavigation?.Hoten ?? "N/A")
                </p>
            </div>

            <div class="mb-3 form-check">
                @* Sử dụng mb-3 cho khoảng cách *@
                <input class="form-check-input" asp-for="Duocphepthi" />
                <label class="form-check-label" asp-for="Duocphepthi"></label> @* Dùng asp-for cho label checkbox *@
                <span asp-validation-for="Duocphepthi" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between mt-4">
                @* Dùng flexbox để căn chỉnh nút *@
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Lưu thay đổi
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Quay lại danh sách
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
